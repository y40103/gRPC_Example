// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: Hello/Hello/Hello.proto

package Hello

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumerationPickOne int32

const (
	Enumeration_CHOICE0 EnumerationPickOne = 0 // 枚舉 必須從0開始
	Enumeration_CHOICE1 EnumerationPickOne = 1
	Enumeration_CHOICE2 EnumerationPickOne = 2
)

// Enum value maps for EnumerationPickOne.
var (
	EnumerationPickOne_name = map[int32]string{
		0: "CHOICE0",
		1: "CHOICE1",
		2: "CHOICE2",
	}
	EnumerationPickOne_value = map[string]int32{
		"CHOICE0": 0,
		"CHOICE1": 1,
		"CHOICE2": 2,
	}
)

func (x EnumerationPickOne) Enum() *EnumerationPickOne {
	p := new(EnumerationPickOne)
	*p = x
	return p
}

func (x EnumerationPickOne) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumerationPickOne) Descriptor() protoreflect.EnumDescriptor {
	return file_Hello_Hello_Hello_proto_enumTypes[0].Descriptor()
}

func (EnumerationPickOne) Type() protoreflect.EnumType {
	return &file_Hello_Hello_Hello_proto_enumTypes[0]
}

func (x EnumerationPickOne) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumerationPickOne.Descriptor instead.
func (EnumerationPickOne) EnumDescriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{1, 0}
}

type SimpleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntNum      int32   `protobuf:"varint,1,opt,name=int_num,json=intNum,proto3" json:"int_num,omitempty"`
	FloatNum    float32 `protobuf:"fixed32,2,opt,name=float_num,json=floatNum,proto3" json:"float_num,omitempty"`
	Descprition string  `protobuf:"bytes,3,opt,name=descprition,proto3" json:"descprition,omitempty"`
	BoolFlag    bool    `protobuf:"varint,4,opt,name=bool_flag,json=boolFlag,proto3" json:"bool_flag,omitempty"`
}

func (x *SimpleType) Reset() {
	*x = SimpleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleType) ProtoMessage() {}

func (x *SimpleType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleType.ProtoReflect.Descriptor instead.
func (*SimpleType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{0}
}

func (x *SimpleType) GetIntNum() int32 {
	if x != nil {
		return x.IntNum
	}
	return 0
}

func (x *SimpleType) GetFloatNum() float32 {
	if x != nil {
		return x.FloatNum
	}
	return 0
}

func (x *SimpleType) GetDescprition() string {
	if x != nil {
		return x.Descprition
	}
	return ""
}

func (x *SimpleType) GetBoolFlag() bool {
	if x != nil {
		return x.BoolFlag
	}
	return false
}

type Enumeration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Enumeration) Reset() {
	*x = Enumeration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enumeration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enumeration) ProtoMessage() {}

func (x *Enumeration) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enumeration.ProtoReflect.Descriptor instead.
func (*Enumeration) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{1}
}

type ListType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntList []int32 `protobuf:"varint,1,rep,packed,name=int_list,json=intList,proto3" json:"int_list,omitempty"` // int_list -> 類似 python List[int]
}

func (x *ListType) Reset() {
	*x = ListType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListType) ProtoMessage() {}

func (x *ListType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListType.ProtoReflect.Descriptor instead.
func (*ListType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{2}
}

func (x *ListType) GetIntList() []int32 {
	if x != nil {
		return x.IntList
	}
	return nil
}

type NestedType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NestedType) Reset() {
	*x = NestedType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedType) ProtoMessage() {}

func (x *NestedType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedType.ProtoReflect.Descriptor instead.
func (*NestedType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{3}
}

type MapType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map1 map[string]int32 `protobuf:"bytes,1,rep,name=map1,proto3" json:"map1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // map1 -> 類似 python map
	Map2 map[string]int32 `protobuf:"bytes,2,rep,name=map2,proto3" json:"map2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *MapType) Reset() {
	*x = MapType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapType) ProtoMessage() {}

func (x *MapType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapType.ProtoReflect.Descriptor instead.
func (*MapType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{4}
}

func (x *MapType) GetMap1() map[string]int32 {
	if x != nil {
		return x.Map1
	}
	return nil
}

func (x *MapType) GetMap2() map[string]int32 {
	if x != nil {
		return x.Map2
	}
	return nil
}

type OneofType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to One:
	//	*OneofType_Text
	//	*OneofType_Num
	One isOneofType_One `protobuf_oneof:"one"`
}

func (x *OneofType) Reset() {
	*x = OneofType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneofType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneofType) ProtoMessage() {}

func (x *OneofType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneofType.ProtoReflect.Descriptor instead.
func (*OneofType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{5}
}

func (m *OneofType) GetOne() isOneofType_One {
	if m != nil {
		return m.One
	}
	return nil
}

func (x *OneofType) GetText() string {
	if x, ok := x.GetOne().(*OneofType_Text); ok {
		return x.Text
	}
	return ""
}

func (x *OneofType) GetNum() int32 {
	if x, ok := x.GetOne().(*OneofType_Num); ok {
		return x.Num
	}
	return 0
}

type isOneofType_One interface {
	isOneofType_One()
}

type OneofType_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type OneofType_Num struct {
	Num int32 `protobuf:"varint,2,opt,name=num,proto3,oneof"`
}

func (*OneofType_Text) isOneofType_One() {}

func (*OneofType_Num) isOneofType_One() {}

type RequestType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *RequestType) Reset() {
	*x = RequestType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestType) ProtoMessage() {}

func (x *RequestType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestType.ProtoReflect.Descriptor instead.
func (*RequestType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{6}
}

func (x *RequestType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestType) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ResponseType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sentence string `protobuf:"bytes,1,opt,name=sentence,proto3" json:"sentence,omitempty"`
}

func (x *ResponseType) Reset() {
	*x = ResponseType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseType) ProtoMessage() {}

func (x *ResponseType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseType.ProtoReflect.Descriptor instead.
func (*ResponseType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseType) GetSentence() string {
	if x != nil {
		return x.Sentence
	}
	return ""
}

type NestedType_RequestType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 類型 變數名稱 = 流水號;         // RequestType.content -> str
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NestedType_RequestType) Reset() {
	*x = NestedType_RequestType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Hello_Hello_Hello_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedType_RequestType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedType_RequestType) ProtoMessage() {}

func (x *NestedType_RequestType) ProtoReflect() protoreflect.Message {
	mi := &file_Hello_Hello_Hello_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedType_RequestType.ProtoReflect.Descriptor instead.
func (*NestedType_RequestType) Descriptor() ([]byte, []int) {
	return file_Hello_Hello_Hello_proto_rawDescGZIP(), []int{3, 0}
}

func (x *NestedType_RequestType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NestedType_RequestType) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_Hello_Hello_Hello_proto protoreflect.FileDescriptor

var file_Hello_Hello_Hello_proto_rawDesc = []byte{
	0x0a, 0x17, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2f, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2f, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x22, 0x81, 0x01, 0x0a, 0x0a, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x70, 0x72, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x70, 0x72, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x22, 0x40, 0x0a, 0x0b, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x6f, 0x6e, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x48, 0x4f, 0x49, 0x43, 0x45, 0x30, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x48, 0x4f, 0x49, 0x43, 0x45, 0x31, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x4f,
	0x49, 0x43, 0x45, 0x32, 0x10, 0x02, 0x22, 0x25, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x49, 0x0a,
	0x0a, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3b, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x07, 0x4d, 0x61, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x31, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x61,
	0x70, 0x31, 0x12, 0x2c, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x2e, 0x4d, 0x61, 0x70, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x32,
	0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x61, 0x70,
	0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3c, 0x0a, 0x09, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x6f, 0x6e, 0x65,
	0x22, 0x3b, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x32, 0xb8, 0x04, 0x0a, 0x04, 0x54, 0x65,
	0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x12, 0x11, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x11, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x12, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x2e,
	0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0f, 0x2e, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x0f, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x2e, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1d, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07,
	0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e,
	0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x0e, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e,
	0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x54, 0x79, 0x70,
	0x65, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x12, 0x10, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x4f,
	0x6e, 0x65, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x10, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x2e, 0x4f, 0x6e, 0x65, 0x6f, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x09,
	0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x30, 0x12, 0x12, 0x2e, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x13, 0x2e,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x31, 0x12, 0x12, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x13, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x38,
	0x0a, 0x09, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x32, 0x12, 0x12, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0x13, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x53, 0x61, 0x79, 0x48,
	0x65, 0x6c, 0x6c, 0x6f, 0x33, 0x12, 0x12, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x13, 0x2e, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x30, 0x01, 0x42, 0x0d, 0x5a, 0x0b, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2f, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Hello_Hello_Hello_proto_rawDescOnce sync.Once
	file_Hello_Hello_Hello_proto_rawDescData = file_Hello_Hello_Hello_proto_rawDesc
)

func file_Hello_Hello_Hello_proto_rawDescGZIP() []byte {
	file_Hello_Hello_Hello_proto_rawDescOnce.Do(func() {
		file_Hello_Hello_Hello_proto_rawDescData = protoimpl.X.CompressGZIP(file_Hello_Hello_Hello_proto_rawDescData)
	})
	return file_Hello_Hello_Hello_proto_rawDescData
}

var file_Hello_Hello_Hello_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_Hello_Hello_Hello_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_Hello_Hello_Hello_proto_goTypes = []interface{}{
	(EnumerationPickOne)(0),        // 0: Hello.Enumeration.pick_one
	(*SimpleType)(nil),             // 1: Hello.SimpleType
	(*Enumeration)(nil),            // 2: Hello.Enumeration
	(*ListType)(nil),               // 3: Hello.ListType
	(*NestedType)(nil),             // 4: Hello.NestedType
	(*MapType)(nil),                // 5: Hello.MapType
	(*OneofType)(nil),              // 6: Hello.OneofType
	(*RequestType)(nil),            // 7: Hello.RequestType
	(*ResponseType)(nil),           // 8: Hello.ResponseType
	(*NestedType_RequestType)(nil), // 9: Hello.NestedType.RequestType
	nil,                            // 10: Hello.MapType.Map1Entry
	nil,                            // 11: Hello.MapType.Map2Entry
}
var file_Hello_Hello_Hello_proto_depIdxs = []int32{
	10, // 0: Hello.MapType.map1:type_name -> Hello.MapType.Map1Entry
	11, // 1: Hello.MapType.map2:type_name -> Hello.MapType.Map2Entry
	1,  // 2: Hello.Test.TypeSimple:input_type -> Hello.SimpleType
	2,  // 3: Hello.Test.TypeEnum:input_type -> Hello.Enumeration
	3,  // 4: Hello.Test.TypeList:input_type -> Hello.ListType
	9,  // 5: Hello.Test.TypeNested:input_type -> Hello.NestedType.RequestType
	5,  // 6: Hello.Test.TypeMap:input_type -> Hello.MapType
	6,  // 7: Hello.Test.TypeOneof:input_type -> Hello.OneofType
	7,  // 8: Hello.Test.SayHello0:input_type -> Hello.RequestType
	7,  // 9: Hello.Test.SayHello1:input_type -> Hello.RequestType
	7,  // 10: Hello.Test.SayHello2:input_type -> Hello.RequestType
	7,  // 11: Hello.Test.SayHello3:input_type -> Hello.RequestType
	1,  // 12: Hello.Test.TypeSimple:output_type -> Hello.SimpleType
	2,  // 13: Hello.Test.TypeEnum:output_type -> Hello.Enumeration
	3,  // 14: Hello.Test.TypeList:output_type -> Hello.ListType
	9,  // 15: Hello.Test.TypeNested:output_type -> Hello.NestedType.RequestType
	5,  // 16: Hello.Test.TypeMap:output_type -> Hello.MapType
	6,  // 17: Hello.Test.TypeOneof:output_type -> Hello.OneofType
	8,  // 18: Hello.Test.SayHello0:output_type -> Hello.ResponseType
	8,  // 19: Hello.Test.SayHello1:output_type -> Hello.ResponseType
	8,  // 20: Hello.Test.SayHello2:output_type -> Hello.ResponseType
	8,  // 21: Hello.Test.SayHello3:output_type -> Hello.ResponseType
	12, // [12:22] is the sub-list for method output_type
	2,  // [2:12] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_Hello_Hello_Hello_proto_init() }
func file_Hello_Hello_Hello_proto_init() {
	if File_Hello_Hello_Hello_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Hello_Hello_Hello_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enumeration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneofType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Hello_Hello_Hello_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedType_RequestType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Hello_Hello_Hello_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*OneofType_Text)(nil),
		(*OneofType_Num)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Hello_Hello_Hello_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Hello_Hello_Hello_proto_goTypes,
		DependencyIndexes: file_Hello_Hello_Hello_proto_depIdxs,
		EnumInfos:         file_Hello_Hello_Hello_proto_enumTypes,
		MessageInfos:      file_Hello_Hello_Hello_proto_msgTypes,
	}.Build()
	File_Hello_Hello_Hello_proto = out.File
	file_Hello_Hello_Hello_proto_rawDesc = nil
	file_Hello_Hello_Hello_proto_goTypes = nil
	file_Hello_Hello_Hello_proto_depIdxs = nil
}
